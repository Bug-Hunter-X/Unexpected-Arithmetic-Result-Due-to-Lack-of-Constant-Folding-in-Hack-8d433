function foo(x: int): int {  return x + 1; } function bar(x: int): int {  return foo(x) * 2; }  function baz(x: int): int {  return bar(x) - 1; }  When calling baz(5), the expected output is 10, but the actual output is 11. This is because the type system in Hack does not perform constant folding during compilation, leading to unexpected results.  To demonstrate the bug, use the following Hack code and run it:  <?hh  function foo(x: int): int {  return x + 1; }  function bar(x: int): int {  return foo(x) * 2; }  function baz(x: int): int {  return bar(x) - 1; }  echo baz(5); // outputs 11, not 10  ?>